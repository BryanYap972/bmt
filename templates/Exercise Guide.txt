Hi there! This is a guide for the Exercises in Lesson 3, you can refer to this for some
clarification or when you're stuck on an exercise.

*Note: The 'templates' folder is created just to assist the lesson exercises, it's not 
 present in a normal Nuxt project!

##############################################################################################
###                             Exercise 1: Project Structure                              ###
##############################################################################################

- For this exercise, we'll be focussing on setting up the project for the next 2 exercises

(1) Icons and Images
    - In an IT project, images and icons are stored in the 'assets' folder. However, currently 
      it is still empty
    - The required assets are found in 'templates'. Refer to this for how the assets are 
      stored and do the same for 'assets' folder

(2) Pages
    - After running the website locally, the project runs the main page (index.vue)
    - We won't be using the base file, use the one in 'templates' instead

(3) Components
    - This is the folder where we will store all our components
    - Don't worry, we'll go through the concepts for this later
    - Copy Card.vue into 'components' folder

##############################################################################################
###                             Exercise 2: Props & Data                                   ###
##############################################################################################

- For this exercise, we'll work on using the Card component in our index page

Setup for Component
(1) We'll need to import Card.vue into index.vue
(2) We'll need to call the component in the 'export default' script
    - Use 'components: ...' to declare your component

Fill in Component with attributes
(1) The data for the component are already coded in for you, refer to 'item' in index.vue
(2) How would you bind this data to your component?

Receiving data as props in Component
(1) Component will receive 'item' data as an object
(2) How would you access and call the prop attributes?

##############################################################################################
###                             Exercise 3: Vue Directives                                 ###
##############################################################################################

- For this exercise, we'll be using a few Vue Directives to make multiple cards

Data setup for multiple cards 
- Refer to items.txt in 'templates'. You'll need to add this in index.vue
*Note: Unlike 'item' which is a single object, 'items' is an array of objects instead

(1) Which Vue Directive allows iteration in an array?
    - You'll need to use this inside the Card component tag in index.vue

(2) Once multiple cards are created, you'll notice that some cards are supposed to use images
    instead of title1 but the images are not appearing
    - You'll need to use some conditional statements, which Vue Directive allows for this?

//////////////////////////////////////////////////////////////////////////////////////////////